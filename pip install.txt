gcloud
cd C:\Model Deployment\deploy_aic_lstm-main
gcloud init
gcloud config get-value project 
gcloud builds submit --tag gcr.io/deploy-aic-lstm/aiclstm 
gcloud run deploy --image gs://deploy-aic-lstm_cloudbuild/source/1661940405.965436-b9fbab3d46524ff8b5f7ff754618d126.tgz 
->Service name -aic-lstm
gcloud run deploy --image gs://deploy-aic-lstm_cloudbuild/source/1661940405.965436-b9fbab3d46524ff8b5f7ff754618d126.tgz --platform managed
->Service name - aic-lstm

Got to Gcloud UI
->cloud run
->Create service aiclstm and enter details


https://8000-91a0f72e-eac4-41e7-872c-2fc5274c2cb5.cs-asia-southeast1-yelo.cloudshell.dev/after

pip install tf-nightly-gpu
pip install tensorflow-gpu==2.0.0
 pip install tf-nightly

<!-- <img src="{{url_for(r'C:\Model Deployment\New folder\image-captioning-keras-resnet-main\static\', filename='file.jpg')}}" alt="image" height=340px> -->


kaggle datasets download -d hsankesara/flickr-image-dataset



C:\Model Deployment\New folder\image-captioning-keras-resnet-main\requirements.txt
requirements.txt
\

pip install tf-nightly-gpu
gsutil rewrite -s

sudo apt update
sudo apt install python3 python3-dev python3-venv
wget https://bootstrap.pypa.io/get-pip.py
sudo python3 get-pip.py

pip install google-cloud-storage
pip install --upgrade google-cloud-storage

sudo apt install python-opencv

https://github.com/MonicaRekhaN/deploy_aic_lstm.git
git remote add origin https://github.com/MonicaRekhaN/fastapi_heroku.git
git branch -M main
git push -u origin main

Open Command prompt:
cd <folder_path>
gcloud init
gcloud app deploy app.yaml --project aic-lstm
gcloud app logs read

File upload done.
Updating service [default]...|WARNING: Found incompatible dependencies: "tpot 0.11.7 has requirement scikit-learn>=0.22.0, but you have scikit-learn 0.20.0.\ntensorflow 2.9.1 has requirement keras<2.10.0,>=2.9.0rc0, but you have keras 2.3.1."




    
    
f = request.files['file'].read()
        #    print(f)
        npimg = np.fromstring(f,np.uint8)
        img = cv2.imdecode(npimg,cv2.IMREAD_COLOR)
        img = Image.fromarray(img.astype("uint8"))
        rawBytes = io.BytesIO()
        img.save(rawBytes, "JPEG")
        rawBytes.seek(0)
        img_base64 = base64.b64encode(rawBytes.getvalue()).decode('ascii')
        mime = "image/jpeg"
        uri = "data:%s;base64,%s"%(mime, img_base64)